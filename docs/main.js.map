{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customWidgets/array-widget/array-widget.component.ts","./src/app/customWidgets/array-widget/array-widget.component.html","./src/app/customWidgets/boolean-widget/boolean-widget.component.ts","./src/app/customWidgets/boolean-widget/boolean-widget.component.html","./src/app/customWidgets/integer-widget/integer-widget.component.ts","./src/app/customWidgets/integer-widget/integer-widget.component.html","./src/app/customWidgets/object-widget/object-widget.component.ts","./src/app/customWidgets/object-widget/object-widget.component.html","./src/app/customWidgets/search-widget/search-widget.component.ts","./src/app/customWidgets/search-widget/search-widget.component.html","./src/app/customWidgets/select-widget/select-widget.component.ts","./src/app/customWidgets/select-widget/select-widget.component.html","./src/app/customWidgets/string-widget/string-widget.component.ts","./src/app/customWidgets/string-widget/string-widget.component.html","./src/app/customWidgets/widgets-registery.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewChecked, ChangeDetectorRef, Component } from '@angular/core';\nimport { FormProperty, PropertyGroup } from 'ngx-schema-form';\n// import  WippSchema  from ;//'./WippSchema.json';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [NgbModalConfig, NgbModal],\n})\nexport class AppComponent implements AfterViewChecked {\n  schemaUrl = 'https://raw.githubusercontent.com/usnistgov/fair-chain-compute-container/master/schema/manifest.schema.json';\n  manifest: any;\n  schema: any;\n  renderedManifest: any;\n\n  constructor(\n    config: NgbModalConfig,\n    private modalService: NgbModal,\n    private sanitizer: DomSanitizer,\n    private cd: ChangeDetectorRef,\n    private httpClient: HttpClient\n  ) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n    this.httpClient.get(this.schemaUrl)\n      .subscribe(res => {\n        console.log(res);\n        const rawSchema: any = res;\n        rawSchema.properties.resourceRequirements.properties.cudaRequirements.properties.cudaComputeCapability.type = 'string';\n        rawSchema.properties.resourceRequirements.properties.cudaRequirements.visibleIf = {\n            gpu: true\n        };\n        rawSchema.properties.inputs.items.properties.options = rawSchema.properties.inputs.items.allOf[0].then.properties.options;\n        rawSchema.properties.inputs.items.properties.options.visibleIf = {\n          oneOf: [\n            { type: 'array' },\n            { type: 'enum' }\n          ]\n        };\n        rawSchema.properties.inputs.items.properties.options.properties.items = rawSchema.properties.inputs.items.allOf[1].then.properties.options.properties.items;\n        rawSchema.properties.inputs.items.properties.options.properties.items.visibleIf = {};\n        rawSchema.properties.inputs.items.properties.options.properties.items.properties.uniqueItems.type = 'boolean';\n        rawSchema.properties.inputs.items.properties.type.widget = 'select';\n        rawSchema.properties.outputs.items.properties.type.widget = 'select';\n        for (let [key, value] of Object.entries(rawSchema.properties.ui.items.allOf[0].then.properties)) {\n          let property: any = value;\n          property.visibleIf = {\n            oneOf: [\n              {\n                key: [\n                  \"$EXP$ target.value != 'fieldsets'\"\n                ]\n              }\n            ]\n          };\n          rawSchema.properties.ui.items.properties[key] = property;\n        }\n        rawSchema.properties.ui.items.properties.default.type = 'string';\n\n        rawSchema.fieldsets = [\n          {\n            title: 'General information',\n            fields: [\n              'name',\n              'version',\n              'title',\n              'description',\n              'author',\n              'institution',\n              'repository',\n              'website',\n              'citation',\n              'containerId',\n              'baseCommand'\n            ]\n          },\n          {\n            title: 'Plugin inputs',\n            fields: [\n              'inputs',\n              'ui'\n            ]\n          },\n          {\n            title: 'Plugin outputs',\n            fields: [\n              'outputs'\n            ]\n          },\n          {\n            title: 'Plugin resource requirements',\n            fields: [\n              'resourceRequirements'\n            ]\n          },\n        ];\n\n        this.schema = rawSchema;\n        console.log(this.schema);\n      });\n  }\n\n  ngAfterViewChecked() {\n    this.cd.detectChanges();\n  }\n\n  verifyFormValidation() {\n    return document.querySelector('form')?.checkValidity();\n  }\n\n  myFieldBindings = {\n    '/inputs': [\n      {\n        input: (event, formProperty: FormProperty) => {\n          console.log(\"binding\");\n          const parent: PropertyGroup = formProperty.findRoot();\n          let i: number = 0;\n          for (const objectProperty of parent.getProperty('inputs')\n            .properties) {\n            const idKey: string = 'ui/' + i + '/key';\n            const child1: FormProperty = objectProperty.properties['name'];\n            const child2: FormProperty = parent.getProperty(idKey);\n            child2.setValue('inputs.' + child1.value, false);\n            ++i;\n          }\n        },\n      },\n    ],\n  };\n\n  generateUri() {\n    var theJSON = JSON.stringify(this.manifest);\n    var uri = this.sanitizer.bypassSecurityTrustUrl(\n      'data:text/json;charset=UTF-8,' + encodeURIComponent(theJSON)\n    );\n    return uri;\n  }\n\n  handleFileInput(files: FileList) {\n    const reader = new FileReader();\n    reader.readAsText(files.item(0));\n    reader.onload = () =>\n      (this.manifest = JSON.parse(reader.result.toString()));\n  }\n\n  open(content) {\n    this.modalService.open(content);\n    this.renderedManifest = { ...this.manifest };\n\n    this.renderedManifest.properties = {\n      // task name field\n      taskName: {\n        type: 'string',\n        description: 'Task name',\n        title: 'Task name',\n        format: 'string',\n        widget: 'string',\n        placeholder: 'Enter a name for this task',\n        maxLength: 127,\n      },\n      // job inputs fields\n      inputs: {\n        type: 'object',\n        required: [],\n        properties: {},\n      },\n    };\n\n    try {\n      // default field bindings - none\n      this.renderedManifest.fieldBindings = {};\n      this.renderedManifest.inputs.forEach((input) => {\n        const inputSchema = {};\n        // common properties\n        inputSchema['key'] = 'inputs.' + input.name;\n        // inputSchema['description'] = input.description;\n        if (input.required) {\n          this.renderedManifest.properties.inputs.required.push(input.name);\n        }\n        // type-specific properties\n\n        switch (input.type) {\n          case 'collection':\n            inputSchema['enum'] = [\n              'collection-A',\n              'collection-B',\n              'collection-C',\n            ];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            break;\n\n          case 'stitchingVector':\n            inputSchema['enum'] = [\n              'stitchingVector-A',\n              'stitchingVector-B',\n              'stitchingVector-C',\n            ];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            break;\n          case 'pyramidAnnotation':\n            inputSchema['enum'] = [\n              'pyramidAnnotation-A',\n              'pyramidAnnotation-B',\n              'pyramidAnnotation-C',\n            ];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            break;\n          case 'pyramid':\n            inputSchema['enum'] = ['pyramid-A', 'pyramid-B', 'pyramid-C'];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            break;\n          case 'tensorflowModel':\n            inputSchema['enum'] = [\n              'tensorflowModel-A',\n              'tensorflowModel-B',\n              'tensorflowModel-C',\n            ];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            break;\n          case 'csvCollection':\n            inputSchema['enum'] = [\n              'csvCollection-A',\n              'csvCollection-B',\n              'csvCollection-C',\n            ];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            break;\n          case 'notebook':\n            inputSchema['enum'] = ['notebook-A', 'notebook-B', 'notebook-C'];\n            inputSchema['widget'] = 'search';\n            inputSchema['type'] = 'string';\n            inputSchema['format'] = input.type;\n            break;\n          case 'enum':\n            inputSchema['type'] = 'string';\n            inputSchema['widget'] = 'select';\n            inputSchema['oneOf'] = [];\n            input.options.values.forEach((value) => {\n              inputSchema['oneOf'].push({\n                enum: [value],\n                description: value,\n              });\n            });\n            inputSchema['default'] = input.options.values[0];\n            break;\n          case 'array':\n            inputSchema['type'] = 'array';\n            inputSchema['format'] = 'array';\n            inputSchema['items'] = input.options.items;\n            break;\n          // Workaround for https://github.com/guillotinaweb/ngx-schema-form/issues/332\n          case 'number':\n          case 'float':\n            inputSchema['type'] = 'string';\n            inputSchema['widget'] = 'integer';\n            break;\n          default:\n            inputSchema['type'] = input.type;\n        }\n        // ui properties\n        const ui = this.renderedManifest.ui.find(\n          (v) => v.key === inputSchema['key']\n        );\n        if (ui.hasOwnProperty('title')) {\n          inputSchema['title'] = ui.title;\n        }\n        if (ui.hasOwnProperty('description')) {\n          inputSchema['placeholder'] = ui.description;\n        }\n        if (ui.hasOwnProperty('condition')) {\n          inputSchema['condition'] = ui.condition;\n          const conditionElements = ui.condition.split('==');\n          if (conditionElements.length === 2) {\n            const inputName = conditionElements[0].split('.');\n            if (inputName.length > 0) {\n              inputSchema['visibleIf'] = {};\n              inputSchema['visibleIf'][inputName[inputName.length - 1]] =\n                conditionElements[1];\n            }\n          }\n        }\n        // hidden fields\n        if (ui.hasOwnProperty('hidden') && ui.hidden === true) {\n          inputSchema['widget'] = 'hidden';\n        }\n        // custom bindings - update value of target input from value of source input\n        if (ui.hasOwnProperty('bind')) {\n          const sourceField = '/inputs/' + ui.bind;\n          const targetField = ui['key'].split('.').join('/');\n          this.renderedManifest.fieldBindings[sourceField] = [\n            {\n              input: (event, formProperty: FormProperty) => {\n                const parent: PropertyGroup = formProperty.findRoot();\n                const target: FormProperty = parent.getProperty(targetField);\n\n                target.setValue(formProperty.value, false);\n              },\n            },\n            '2',\n          ];\n        }\n        if (ui.hasOwnProperty('default')) {\n          inputSchema['default'] = ui.default;\n        }\n        this.renderedManifest.properties.inputs.properties[\n          input.name\n        ] = inputSchema;\n      });\n      // field sets - arrange fields by groups\n      const fieldsetsList = this.renderedManifest.ui.find(\n        (v) => v.key === 'fieldsets'\n      );\n      if (fieldsetsList) {\n        this.renderedManifest.properties.inputs.fieldsets =\n          fieldsetsList.fieldsets;\n      }\n      this.renderedManifest.isSchemaValid = true;\n    } catch (error) {\n      console.log(error);\n      this.renderedManifest.properties = {};\n      this.renderedManifest.isSchemaValid = false;\n    }\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"row page\">\r\n    <div class=\"col-md-5\">\r\n      <sf-form [schema]=\"schema\" [bindings]=\"myFieldBindings\" [(ngModel)]=\"manifest\"></sf-form>\r\n    </div>\r\n    <div class=\"col-md manifest\">\r\n      <div class=\"container-fluid\" id=\"manifestAndButtons\">\r\n        <h3>Manifest:</h3>\r\n        <div id=\"manifest\" class=\"overflow-auto\">\r\n          <pre>{{ manifest | json }}</pre>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-auto no-gutters\">\r\n              <button [disabled]=\"!verifyFormValidation()\" type=\"button\"\r\n                [ngClass]=\"{ banIcon: !verifyFormValidation() }\" class=\"btn btn-outline-primary\"\r\n                (click)=\"open(content)\">\r\n                Render\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-auto no-gutters\">\r\n              <a class=\"btn btn-outline-primary\" [href]=\"generateUri()\" download=\"Wipp-Manifest.json\">Download</a>\r\n            </div>\r\n            <div class=\"col-md-4 no-gutters\">\r\n              <input type=\"file\" class=\"btn btn-outline-primary\" (change)=\"handleFileInput($event.target.files)\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">Manifest</h3>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <sf-form [schema]=\"renderedManifest\" [bindings]=\"renderedManifest.fieldBindings[sourceField]\"></sf-form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"c('Close click')\">\r\n      Close\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SchemaFormModule, WidgetRegistry } from 'ngx-schema-form';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { StringWidgetComponent } from './customWidgets/string-widget/string-widget.component';\nimport { WidgetsRegistry } from './customWidgets/widgets-registery';\nimport { CommonModule } from '@angular/common';\nimport { ArrayWidgetComponent } from './customWidgets/array-widget/array-widget.component';\nimport { ObjectWidgetComponent } from './customWidgets/object-widget/object-widget.component';\nimport { BooleanWidgetComponent } from './customWidgets/boolean-widget/boolean-widget.component';\nimport { IntegerWidgetComponent } from './customWidgets/integer-widget/integer-widget.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectWidgetComponent } from './customWidgets/select-widget/select-widget.component';\nimport { SearchWidgetComponent } from './customWidgets/search-widget/search-widget.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StringWidgetComponent,\n    ArrayWidgetComponent,\n    ObjectWidgetComponent,\n    BooleanWidgetComponent,\n    IntegerWidgetComponent,\n    SelectWidgetComponent,\n    SearchWidgetComponent,\n  ],\n  imports: [\n    SchemaFormModule.forRoot(),\n    ReactiveFormsModule,\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [{ provide: WidgetRegistry, useClass: WidgetsRegistry }],\n  bootstrap: [AppComponent],\n  exports: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\r\nimport { ArrayWidget, FormProperty } from 'ngx-schema-form';\r\n\r\n@Component({\r\n  selector: 'sf-array-widget',\r\n  templateUrl: 'array-widget.component.html',\r\n})\r\nexport class ArrayWidgetComponent extends ArrayWidget {\r\n  removeInputAndUiItem(item: FormProperty, i: number) {\r\n    this.removeItem(item);\r\n    if (this.id == 'inputs') {\r\n      var removeUiButton: any;\r\n      removeUiButton = document.getElementsByClassName('removeUiButton')[i];\r\n      removeUiButton.click();\r\n    }\r\n  }\r\n\r\n  addInputAndUiItem() {\r\n    this.addItem();\r\n    if (this.id == 'inputs') {\r\n      var btnAddUi: any;\r\n      btnAddUi = document.getElementById('addUiButton');\r\n      btnAddUi.click();\r\n    }\r\n  }\r\n}\r\n","<div class=\"widget form-group\">\r\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\r\n        {{ schema.title }}\r\n        <ng-template #tipContent>\r\n            <div *ngIf=\"schema.description\">\r\n                <u>Description</u> : {{ this.schema.description }}\r\n            </div>\r\n            <div *ngIf=\"schema.examples\">\r\n                <u>Examples</u> : {{ this.schema.examples }}\r\n            </div>\r\n        </ng-template>\r\n        <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n            class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n            ?\r\n        </button>\r\n    </label>\r\n\r\n    <div *ngFor=\"let itemProperty of formProperty.properties; let i = index\">\r\n        <sf-form-element [formProperty]=\"itemProperty\"></sf-form-element>\r\n        <button [class]=\"\r\n        id === 'ui'\r\n          ? 'removeUiButton'\r\n          : id == 'inputs'\r\n          ? 'removeInputButton'\r\n          : id == 'outputs'\r\n          ? 'removeOutputButton':\r\n          ''\r\n      \" [ngClass]=\"{ 'd-none': id === 'ui' }\" style=\"margin-bottom: 5px;\"\r\n            (click)=\"removeInputAndUiItem(itemProperty, i)\" class=\"btn btn-outline-secondary array-remove-button\"\r\n            [disabled]=\"isRemoveButtonDisabled()\" *ngIf=\"\r\n        !(\r\n          schema.hasOwnProperty('minItems') &&\r\n          schema.hasOwnProperty('maxItems') &&\r\n          schema.minItems === schema.maxItems\r\n        )\r\n      \">\r\n            <span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\">Remove</span>\r\n        </button>\r\n    </div>\r\n    <button [id]=\"id === 'ui' ? 'addUiButton' : id == 'inputs' ? 'addInputButton' : ''\"\r\n        [ngClass]=\"{ 'd-none': id === 'ui' }\" (click)=\"addInputAndUiItem()\"\r\n        class=\"btn btn-outline-secondary array-add-button\" [disabled]=\"isAddButtonDisabled()\" *ngIf=\"\r\n      !(\r\n        schema.hasOwnProperty('minItems') &&\r\n        schema.hasOwnProperty('maxItems') &&\r\n        schema.minItems === schema.maxItems\r\n      )\r\n    \">\r\n        <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\">Add</span>\r\n    </button>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport {  CheckboxWidget } from \"ngx-schema-form\";\r\n\r\n@Component({\r\n    selector: 'sf-boolean-widget',\r\n    templateUrl: 'boolean-widget.component.html'\r\n})\r\nexport class BooleanWidgetComponent extends CheckboxWidget  {\r\n\r\n}","<div class=\"widget form-group\">\r\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\r\n        {{ schema.title }}\r\n    </label>\r\n    <div *ngIf=\"schema.type!='array'\" class=\"checkbox\">\r\n        <label class=\"horizontal control-label\">\r\n            <input [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\"\r\n                [indeterminate]=\"control.value !== false && control.value !== true ? true :null\" type=\"checkbox\"\r\n                [attr.disabled]=\"schema.readOnly\">\r\n            <input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n            <ng-template #tipContent>\r\n                <div *ngIf=schema.description><u>Description</u> : {{this.schema.description}}</div>\r\n                <div *ngIf=schema.examples><u>Examples</u> : {{this.schema.examples}}</div>\r\n            </ng-template>\r\n            <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n                class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n                ?\r\n            </button>\r\n        </label>\r\n    </div>\r\n    <ng-container *ngIf=\"schema.type==='array'\">\r\n        <div *ngFor=\"let option of schema.items.oneOf\" class=\"checkbox\">\r\n            <label class=\"horizontal control-label\">\r\n                <input [attr.name]=\"name\" value=\"{{option.enum[0]}}\" type=\"checkbox\" [attr.disabled]=\"schema.readOnly\"\r\n                    (change)=\"onCheck($event.target)\" [attr.checked]=\"checked[option.enum[0]] ? true : null\"\r\n                    [attr.id]=\"id + '.' + option.enum[0]\">\r\n                {{option.description}}\r\n            </label>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component } from '@angular/core';\r\nimport { IntegerWidget } from 'ngx-schema-form';\r\n\r\n@Component({\r\n  selector: 'sf-integer-widget',\r\n  templateUrl: 'integer-widget.component.html',\r\n})\r\nexport class IntegerWidgetComponent extends IntegerWidget {}\r\n","<div class=\"widget form-group\">\r\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\r\n        {{ schema.title }} <span *ngIf=\"schema.isRequired\" style=\"color:red;\">*</span>\r\n    </label>\r\n    <ng-template #tipContent>\r\n        <div *ngIf=schema.description><u>Description</u> : {{this.schema.description}}</div>\r\n        <div *ngIf=schema.examples><u>Examples</u> : {{this.schema.examples}}</div>\r\n    </ng-template>\r\n    <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n        class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n        ?\r\n    </button>\r\n    <input [attr.readonly]=\"schema.readOnly?true:null\" [attr.name]=\"name\" [attr.id]=\"id\"\r\n        class=\"text-widget integer-widget form-control\" [formControl]=\"control\" [attr.type]=\"'number'\"\r\n        [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\" [attr.placeholder]=\"schema.placeholder\"\r\n        [attr.maxLength]=\"schema.maxLength || null\" [attr.required]=\"schema.isRequired || null\"\r\n        [attr.minLength]=\"schema.minLength || null\">\r\n</div>","import { Component } from '@angular/core';\r\nimport { ObjectWidget } from 'ngx-schema-form';\r\n\r\n@Component({\r\n  selector: 'sf-form-object',\r\n  templateUrl: 'object-widget.component.html',\r\n})\r\nexport class ObjectWidgetComponent extends ObjectWidget {}\r\n","<fieldset *ngFor=\"let fieldset of formProperty.schema.fieldsets\">\r\n    <legend *ngIf=\"fieldset.title\">\r\n        {{ fieldset.title }}\r\n        <ng-template #tipContent>\r\n            <div *ngIf=\"schema.description\">\r\n                <u>Description</u> : {{ this.schema.description }}\r\n            </div>\r\n            <div *ngIf=\"schema.examples\">\r\n                <u>Examples</u> :\r\n                <span *ngFor=\"let obj of this.schema.examples\">\r\n                    {{ obj | json }}\r\n                </span>\r\n            </div>\r\n        </ng-template>\r\n        <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n            class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n            ?\r\n        </button>\r\n    </legend>\r\n\r\n\r\n    <div *ngFor=\"let fieldId of fieldset.fields\">\r\n        <sf-form-element [formProperty]=\"formProperty.getProperty(fieldId)\"></sf-form-element>\r\n    </div>\r\n</fieldset>","import { Component } from '@angular/core';\r\nimport { StringWidget } from 'ngx-schema-form';\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search-widget',\r\n  templateUrl: './search-widget.component.html',\r\n  styleUrls: ['./search-widget.component.css'],\r\n})\r\nexport class SearchWidgetComponent extends StringWidget {\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      map((term) =>\r\n        this.schema.enum.filter(\r\n          (v) => v.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n        )\r\n      )\r\n    );\r\n\r\n  checkIfPatternMatch(value: string) {\r\n    var patt = new RegExp(this.schema.pattern);\r\n    if (patt.test(value)) return true;\r\n    return false;\r\n  }\r\n}\r\n","<input *ngIf=\"this.schema.widget.id ==='hidden'; else notHiddenFieldBlock\" [attr.name]=\"name\" type=\"hidden\"\r\n    [formControl]=\"control\">\r\n<ng-template #notHiddenFieldBlock>\r\n    <div class=\"widget form-group\">\r\n        <label [attr.for]=\"id\" class=\"horizontal control-label\">\r\n            {{ schema.title}} <span *ngIf=\"schema.isRequired\" style=\"color:red;\">*</span>\r\n        </label>\r\n        <ng-template #tipContent>\r\n            <div *ngIf=schema.description><u>Description</u> : {{this.schema.description}}</div>\r\n            <div *ngIf=schema.examples><u>Examples</u> : {{this.schema.examples}}</div>\r\n        </ng-template>\r\n        <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n            class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n            ?\r\n        </button>\r\n\r\n        <input #inputField [name]=\"name\" [attr.readonly]=\"(schema.widget.id!=='color') && schema.readOnly?true:null\"\r\n            class=\"text-widget.id textline-widget form-control\"\r\n            [attr.type]=\"!this.schema.widget.id || this.schema.widget.id === 'string' ? 'text' : this.schema.widget.id\"\r\n            [attr.id]=\"id\" [formControl]=\"control\" [attr.placeholder]=\"schema.placeholder\"\r\n            [attr.maxLength]=\"schema.maxLength || null\" [attr.minLength]=\"schema.minLength || null\"\r\n            [attr.required]=\"schema.isRequired || null\"\r\n            [attr.disabled]=\"(schema.widget.id=='color' && schema.readOnly)?true:null\" autocomplete=\"off\"\r\n            [attr.pattern]=\"this.schema.pattern ? this.schema.pattern:null\" [ngbTypeahead]=\"search\">\r\n        <span *ngIf=\"!checkIfPatternMatch(inputField.value)\" style=\"color:red;\">Value must\r\n            match the\r\n            pattern:\r\n            {{schema.pattern.substring(1, schema.pattern.toString().length - 1)}}</span>\r\n        <input *ngIf=\"(schema.widget.id==='color' && schema.readOnly)\" [attr.name]=\"name\" type=\"hidden\"\r\n            [formControl]=\"control\">\r\n    </div>\r\n</ng-template>","import { Component } from '@angular/core';\r\nimport { ControlWidget } from 'ngx-schema-form';\r\n\r\n@Component({\r\n  selector: 'sf-select-widget',\r\n  templateUrl: 'select-widget.component.html',\r\n})\r\nexport class SelectWidgetComponent extends ControlWidget {}\r\n","<div class=\"widget form-group\">\r\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\r\n        {{ schema.title }} <span *ngIf=\"schema.isRequired\" style=\"color:red;\">*</span>\r\n    </label>\r\n    <ng-template #tipContent>\r\n        <div *ngIf=schema.description><u>Description</u> : {{this.schema.description}}</div>\r\n        <div *ngIf=schema.examples><u>Examples</u> : {{this.schema.examples}}</div>\r\n    </ng-template>\r\n    <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n        class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n        ?\r\n    </button>\r\n    <select [attr.required]=\"schema.isRequired || null\" *ngIf=\"schema.type!='array'\" [formControl]=\"control\"\r\n        [attr.name]=\"name\" [attr.id]=\"id\" [attr.disabled]=\"schema.readOnly\" [disableControl]=\"schema.readOnly\"\r\n        class=\"form-control\">\r\n        <ng-container *ngIf=\"schema.oneOf; else use_enum\">\r\n            <option *ngFor=\"let option of schema.oneOf\" [ngValue]=\"option.enum[0]\">{{option.description}}</option>\r\n        </ng-container>\r\n        <ng-template #use_enum>\r\n            <option *ngFor=\"let option of schema.enum\" [ngValue]=\"option\">{{option}}</option>\r\n        </ng-template>\r\n    </select>\r\n    <select *ngIf=\"schema.type==='array'\" multiple [formControl]=\"control\" [attr.name]=\"name\" [attr.id]=\"id\"\r\n        [attr.disabled]=\"schema.readOnly\" [disableControl]=\"schema.readOnly\" class=\"form-control\">\r\n        <option *ngFor=\"let option of schema.items.oneOf\" [ngValue]=\"option.enum[0]\" [attr.disabled]=\"option.readOnly\">\r\n            {{option.description}}</option>\r\n    </select>\r\n    <input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\r\n</div>","import { Component } from '@angular/core';\r\nimport { ControlWidget } from 'ngx-schema-form';\r\n\r\n@Component({\r\n  selector: 'sf-string-widget',\r\n  templateUrl: 'string-widget.component.html',\r\n  styleUrls: ['./string-widget.component.css'],\r\n})\r\nexport class StringWidgetComponent extends ControlWidget {\r\n  checkIfPatternMatch(value: string) {\r\n    var patt = new RegExp(this.schema.pattern);\r\n    if (patt.test(value)) return true;\r\n    return false;\r\n  }\r\n}\r\n","<input *ngIf=\"this.schema.widget.id ==='hidden'; else notHiddenFieldBlock\" [attr.name]=\"name\" type=\"hidden\"\r\n    [formControl]=\"control\">\r\n<ng-template #notHiddenFieldBlock>\r\n    <div class=\"widget form-group\">\r\n        <label [attr.for]=\"id\" class=\"horizontal control-label\">\r\n            {{ schema.title}} <span *ngIf=\"schema.isRequired\" style=\"color:red;\">*</span>\r\n        </label>\r\n        <ng-template #tipContent>\r\n            <div *ngIf=schema.description><u>Description</u> : {{this.schema.description}}</div>\r\n            <div *ngIf=schema.examples><u>Examples</u> : {{this.schema.examples}}</div>\r\n        </ng-template>\r\n        <button *ngIf=\"schema.description || schema.examples\" id=\"HelpButton\" type=\"button\"\r\n            class=\"btn btn-outline-info mr-2\" placement=\"right\" [ngbTooltip]=\"tipContent\">\r\n            ?\r\n        </button>\r\n\r\n        <input #inputField [name]=\"name\" [attr.readonly]=\"(schema.widget.id!=='color') && schema.readOnly?true:null\"\r\n            class=\"text-widget.id textline-widget form-control\"\r\n            [attr.type]=\"!this.schema.widget.id || this.schema.widget.id === 'string' ? 'text' : this.schema.widget.id\"\r\n            [attr.id]=\"id\" [formControl]=\"control\" [attr.placeholder]=\"schema.placeholder\"\r\n            [attr.maxLength]=\"schema.maxLength || null\" [attr.minLength]=\"schema.minLength || null\"\r\n            [attr.required]=\"schema.isRequired || null\"\r\n            [attr.disabled]=\"(schema.widget.id=='color' && schema.readOnly)?true:null\" autocomplete=\"off\"\r\n            [attr.pattern]=\"this.schema.pattern ? this.schema.pattern:null\">\r\n        <span *ngIf=\"!checkIfPatternMatch(inputField.value)\" style=\"color:red;\">Value must\r\n            match the\r\n            pattern:\r\n            {{schema.pattern.substring(1, schema.pattern.toString().length - 1)}}</span>\r\n        <input *ngIf=\"(schema.widget.id==='color' && schema.readOnly)\" [attr.name]=\"name\" type=\"hidden\"\r\n            [formControl]=\"control\">\r\n    </div>\r\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { DefaultWidgetRegistry } from 'ngx-schema-form';\r\nimport { ArrayWidgetComponent } from './array-widget/array-widget.component';\r\nimport { BooleanWidgetComponent } from './boolean-widget/boolean-widget.component';\r\nimport { IntegerWidgetComponent } from './integer-widget/integer-widget.component';\r\nimport { ObjectWidgetComponent } from './object-widget/object-widget.component';\r\nimport { SearchWidgetComponent } from './search-widget/search-widget.component';\r\nimport { SelectWidgetComponent } from './select-widget/select-widget.component';\r\nimport { StringWidgetComponent } from './string-widget/string-widget.component';\r\n\r\n@Injectable()\r\nexport class WidgetsRegistry extends DefaultWidgetRegistry {\r\n  constructor() {\r\n    super();\r\n\r\n    this.register('string', StringWidgetComponent);\r\n    this.register('array', ArrayWidgetComponent);\r\n    this.register('object', ObjectWidgetComponent);\r\n    this.register('boolean', BooleanWidgetComponent);\r\n    this.register('integer', IntegerWidgetComponent);\r\n    this.register('select', SelectWidgetComponent);\r\n    this.register('search', SearchWidgetComponent);\r\n\r\n    // this.register('customString', StringWidgetComponent);\r\n    // this.register('customArray', ArrayWidgetComponent);\r\n    // this.register('customObject', ObjectWidgetComponent);\r\n    // this.register('customBoolean', BooleanWidgetComponent);\r\n    // this.register('customInteger', IntegerWidgetComponent);\r\n    // this.register('customSelect', SelectWidgetComponent);\r\n    // this.register('customSearch', SearchWidgetComponent);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}